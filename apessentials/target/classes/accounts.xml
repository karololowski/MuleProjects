<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:batch="http://www.mulesoft.org/schema/mule/batch" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:data-mapper="http://www.mulesoft.org/schema/mule/ee/data-mapper"
	xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/data-mapper http://www.mulesoft.org/schema/mule/ee/data-mapper/current/mule-data-mapper.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/current/mule-sfdc.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd">
      <http:listener-config name="HTTP_Listener_Configuration4" host="0.0.0.0" port="9009" doc:name="HTTP Listener Configuration"/>
       <http:request-config name="Bank_REST_Request_Configuration2" host="mu.mulesoft-training.com" port="80" basePath="/build/banking/rest" doc:name="HTTP Request Configuration"/>
    <data-mapper:config name="CSV_To_Map" transformationGraphPath="csv_to_map_1.grf" doc:name="CSV_To_Map"/>
    <data-mapper:config name="List_Map__To_List_Account_" transformationGraphPath="list_map__to_list_account_.grf" doc:name="List_Map__To_List_Account_"/>
    <data-mapper:config name="List_Map__To_List_Account__1" transformationGraphPath="list_map__to_list_account__1.grf" doc:name="List_Map__To_List_Account__1"/>
    <data-mapper:config name="List_Map__To_List_Account__1List_Map__To_List_Account__2" transformationGraphPath="list_map__to_list_account__5.grf" doc:name="List_Map__To_List_Account__1List_Map__To_List_Account__2"/>
    <file:connector name="File" autoDelete="true" streaming="true" validateConnections="true" doc:name="File"/>
    <batch:job name="accountsCSVBatch">
        <batch:input>
            <file:inbound-endpoint path="C:\Users\kolowski001\AnypointStudio\workspace\apessentials\src\main\resources\input" moveToPattern="#[message.inboundProperties.originalFilename].backup" responseTimeout="10000" doc:name="Copy_of_File">
                <file:filename-regex-filter pattern=".*csv" caseSensitive="false"/>
            </file:inbound-endpoint>
            <data-mapper:transform config-ref="CSV_To_Map" doc:name="CSV To Map"/>
            <set-variable variableName="SIZE" value="#[payload.size()]" doc:name="size"/>
        </batch:input>
        <batch:process-records>
            <batch:step name="Batch_Step">
                <set-variable variableName="fname" value="#[payload.Name]" doc:name="Variable"/>
                <batch:set-record-variable variableName="rname" value="#[payload.Name]" doc:name="Record Variable"/>
                <logger level="INFO" doc:name="Logger"/>
            </batch:step>
            <batch:step name="Batch_Step1">
                <logger level="INFO" doc:name="Logger"/>
            </batch:step>
        </batch:process-records>
        <batch:on-complete>
            <logger message="#['\n\nProcessed: ' + payload.processedRecords + 'Failed: ' + payload.failedRecords]" level="INFO" doc:name="Logger"/>
        </batch:on-complete>
    </batch:job>

  <flow name="getCSVAccountsFlow" initialState="stopped">
        <file:inbound-endpoint path="C:\Users\kolowski001\AnypointStudio\workspace\apessentials\src\main\resources\input" moveToPattern="#[message.inboundProperties.originalFilename].backup"  responseTimeout="10000" doc:name="File">
            <file:filename-regex-filter pattern=".*csv" caseSensitive="false"/>
        </file:inbound-endpoint>
        <data-mapper:transform config-ref="CSV_To_Map" doc:name="transfor"/>
        <dw:transform-message doc:name="Data Weave" metadata:id="d4bdd313-7b72-498e-81f4-8c8caf83da6e">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload map ((value , index) -> {
	"Billing Street": value."Billing Street",
	"Billing City": value."Billing City",
	"Billing Country": value."Billing Country",
	"Billing State": value."Billing State",
	Name: value.Name,
	BillingPostalCode: value.BillingPostalCode
})]]></dw:set-payload>
        </dw:transform-message>
        <foreach doc:name="For Each">
            <logger message="#[payload]" level="INFO" doc:name="Logger1"/>
        </foreach>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
    </flow>
     
     
     
     
     
     
     
           <batch:job name="accountsBatch">
        <batch:input>
            <poll doc:name="Poll">
                <fixed-frequency-scheduler frequency="30" timeUnit="MINUTES"/>
                <watermark variable="lastAccountID" default-expression="0" selector="MAX" selector-expression="#[payload.accountID]"/>
                <db:select config-ref="MySQL_Configuration" doc:name="Database">
                    <db:parameterized-query><![CDATA[SELECT *
FROM accounts
WHERE postal = '11111111' AND accountID> #[flowVars.lastAccountID]]]></db:parameterized-query>
                </db:select>
            </poll>
            <data-mapper:transform config-ref="List_Map__To_List_Account__1List_Map__To_List_Account__2" doc:name="List&lt;Map&gt; To List&lt;Account&gt;"/>
            <sfdc:create config-ref="Salesforce__Basic_Authentication" type="Account" doc:name="Salesforce">
                <sfdc:objects ref="#[payload]"/>
            </sfdc:create>
        </batch:input>
        <batch:process-records>
            <batch:step name="Batch_Step3">
                <enricher source="#[payload.size() &gt; 0]" target="#[recordVars.exists]" doc:name="Message Enricher">
                    <sfdc:query config-ref="Salesforce__Basic_Authentication" query="dsql:SELECT Name FROM Account WHERE Name = '#[payload.Name]'" doc:name="Salesforce"/>
                </enricher>
                <logger message="#['\n\nRecordVar: ' + recordVars.exists]" level="INFO" doc:name="Logger"/>
            </batch:step>
            <batch:step name="Batch_Step2" accept-expression="#[ !recordVars.exists]">
                <logger message="#['\n\nRecordVar Check 2: ' + recordVars.exists]" level="INFO" doc:name="Logger"/>
                <batch:commit size="100" doc:name="Batch Commit">
                    <sfdc:create config-ref="Salesforce__Basic_Authentication" type="Account" doc:name="Salesforce">
                        <sfdc:objects ref="#[payload]"/>
                    </sfdc:create>
                </batch:commit>
            </batch:step>
        </batch:process-records>
        <batch:on-complete>
            <logger message="#['\n\nProcessed: ' + payload.processedRecords + ' Failed: ' + payload.failedRecords]" level="INFO" doc:name="Logger"/>
        </batch:on-complete>
    </batch:job>
     <flow name="getSFDCAccountsFlow">
        <http:listener config-ref="american-flights-api-httpListenerConfig" path="/sfdc" allowedMethods="GET" doc:name="HTTP"/>
        

        <sfdc:query config-ref="Salesforce__Basic_Authentication" query="dsql:SELECT BillingCity,BillingCountry,BillingPostalCode,BillingState,BillingStreet,Name FROM Account" doc:name="Salesforce"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <logger message="#[payload]" level="INFO" doc:name="Logger2"/>
    </flow>
       <flow name="getBankAcountsFlow">
        <http:listener config-ref="american-flights-api-httpListenerConfig" path="/bank/{ID}" doc:name="HTTP" allowedMethods="GET"/>
        <http:request config-ref="Bank_REST_Request_Configuration" path="/customers/{customer_id}/accounts" method="GET" doc:name="Bank REST Request">
            <http:request-builder>
                <http:uri-param paramName="customer_id" value="#[message.inboundProperties.'http.uri.params'.ID]"/>
            </http:request-builder>
        </http:request>
    </flow>




</mule>
